{"version":3,"sources":["utils/duration/index.js","utils/class-names/index.js","pomodoro/FocusDuration.js","pomodoro/BreakDuration.js","pomodoro/ProgressBar.js","pomodoro/Paused.js","pomodoro/MainButtons.js","pomodoro/Display.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","secondsToDuration","givenSeconds","seconds","round","classNames","classNameToBoolean","Object","entries","reduce","classes","className","value","concat","undefined","filter","join","FocusDuration","clickHandler","timer","running","data-testid","focusDuration","onClick","type","time","id","BreakDuration","breakDuration","ProgressBar","percent","currentTime","mode","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","Paused","paused","parseInt","MainButtons","stop","playPause","aria-label","title","oi","Display","currentDuration","timeRemaining","Pomodoro","initialState","useState","isTimerRunning","setIsTimerRunning","setTimer","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","Audio","play","event","target","min","max","prevState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f387b96.chunk.js","sourcesContent":["/**\r\n * Formats a number of minutes as 'mm:00'.\r\n *\r\n * For example,\r\n *    minutesToDuration(3) = '03:00'\r\n *    minutesToDuration(45) = '45:00'\r\n *\r\n * @param givenMinutes\r\n *    the number of minutes in the duration\r\n * @returns {string}\r\n *    the given minutes formatted as 'mm:00'\r\n */\r\n\r\nexport function minutesToDuration(givenMinutes) {\r\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\r\n  return `${minutes}:00`;\r\n}\r\n\r\n/**\r\n * Formats a number of seconds as 'mm:ss'.\r\n *\r\n * For example,\r\n *    secondsToDuration(305) = '05:05'\r\n *    secondsToDuration(930) = '15:30'\r\n *\r\n * @param givenSeconds\r\n *    the number of seconds in the duration\r\n * @returns {string}\r\n *    the given seconds formatted as 'mm:ss'\r\n */\r\n\r\nexport function secondsToDuration(givenSeconds) {\r\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n  const seconds = Math.round(givenSeconds % 60)\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n  return `${minutes}:${seconds}`;\r\n}\r\n\r\n","/**\r\n * Use this function to dynamically assign the className property of react components.\r\n *\r\n * Usage:\r\n *\r\n *  <span className={classNames({\r\n *               \"oi\": true,\r\n *               \"oi-media-play\": currentState.isPaused,\r\n *               'oi-media-pause': !currentState.isPaused\r\n *             })}/>\r\n *\r\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\r\n *\r\n * @param classNameToBoolean\r\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\r\n * @returns {string}\r\n *    a space delimited string of the class names which have a value of `true`.\r\n */\r\nexport default function classNames(classNameToBoolean) {\r\n  return Object.entries(classNameToBoolean)\r\n    .reduce(\r\n      (classes, [className, value]) =>\r\n        classes.concat(value ? className : undefined),\r\n      []\r\n    )\r\n    .filter((className) => className !== undefined)\r\n    .join(\" \");\r\n}\r\n","import React from \"react\";\r\nimport {minutesToDuration} from \"../utils/duration\";\r\nimport classNames from \"../utils/class-names\";\r\n\r\nfunction FocusDuration({clickHandler, timer, running}) {\r\n    return (\r\n    <div className=\"col\">\r\n    <div className=\"input-group input-group-lg mb-2\">\r\n      <span className=\"input-group-text\" data-testid=\"duration-focus\">\r\n        Focus Duration: {minutesToDuration(timer.focusDuration)}\r\n      </span>\r\n      <div className=\"input-group-append\">\r\n        <button\r\n          onClick= {clickHandler}\r\n          type=\"button\"\r\n          className={classNames({\r\n            \"btn\": true,\r\n            \"btn-secondary\": true,\r\n            \"decrease\": true,\r\n            \"off\": (running || timer.time > 0),\r\n          })}\r\n          data-testid=\"decrease-focus\"\r\n        >\r\n          <span className={classNames({\r\n                  \"oi\": true,\r\n                  \"oi-minus\": true,\r\n                  \"text-secondary\": (running || timer.time > 0),\r\n                })}/>\r\n        </button>\r\n        <button\r\n          onClick= {clickHandler}\r\n          id=\"increase\"\r\n          type=\"button\"\r\n          className={classNames({\r\n            \"btn\": true,\r\n            \"btn-secondary\": true,\r\n            \"increase\": true,\r\n            \"off\": (running || timer.time > 0),\r\n          })}\r\n          data-testid=\"increase-focus\"\r\n        >\r\n          <span className={classNames({\r\n                  \"oi\": true,\r\n                  \"oi-plus\": true,\r\n                  \"text-secondary\": (running || timer.time > 0),\r\n                })} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    );\r\n}\r\n\r\nexport default FocusDuration;","import React from \"react\";\r\nimport {minutesToDuration} from \"../utils/duration\";\r\nimport classNames from \"../utils/class-names\";\r\n\r\nfunction BreakDuration({clickHandler,timer,running}) {\r\n    return (\r\n        <div className=\"col\">\r\n          <div className=\"float-right\">\r\n            <div className=\"input-group input-group-lg mb-2\">\r\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\r\n                {/* TODO: Update this text to display the current break session duration */}\r\n                Break Duration: {minutesToDuration(timer.breakDuration)}\r\n              </span>\r\n              <div className=\"input-group-append\">\r\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\r\n                <button\r\n                  onClick={clickHandler}\r\n                  type=\"button\"\r\n                  className={classNames({\r\n                    \"btn\": true,\r\n                    \"btn-secondary\": true,\r\n                    \"decrease\": true,\r\n                    \"off\": (running || timer.time > 0),\r\n                  })}\r\n                  data-testid=\"decrease-break\"\r\n                >\r\n                  <span className={classNames({\r\n                  \"oi\": true,\r\n                  \"oi-minus\": true,\r\n                  \"text-secondary\": (running || timer.time > 0),\r\n                })}/>\r\n                </button>\r\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\r\n                <button\r\n                  onClick={clickHandler}\r\n                  type=\"button\"\r\n                  className={classNames({\r\n                    \"btn\": true,\r\n                    \"btn-secondary\": true,\r\n                    \"increase\": true,\r\n                    \"off\": (running || timer.time > 0),\r\n                  })}\r\n                  data-testid=\"increase-break\"\r\n                >\r\n                  <span className={classNames({\r\n                  \"oi\": true,\r\n                  \"oi-plus\": true,\r\n                  \"text-secondary\": (running || timer.time > 0),\r\n                })} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BreakDuration;","import React from \"react\";\r\nimport classNames from \"../utils/class-names\";\r\n\r\n\r\nfunction ProgressBar({timer, running}) {\r\n let percent = 0;\r\n let currentTime = timer.time/60;\r\n    if (timer.mode === \"Focusing\") {\r\n    percent = (currentTime/timer.focusDuration) * 100;\r\n } else if (timer.mode === \"On Break\"){\r\n    percent = (currentTime/timer.breakDuration) * 100;\r\n }\r\n\r\n   return ( \r\n    <div className={classNames({\r\n        \"row mb-2\": true,\r\n        \"d-none\": !running && timer.time === 0,\r\n    })}>\r\n    <div className=\"col\">\r\n      <div className=\"progress\" style={{ height: \"20px\" }}>\r\n        <div\r\n          className=\"progress-bar\"\r\n          role=\"progressbar\"\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n          aria-valuenow={percent}\r\n          style={{ width: `${percent}%` }}\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n   ); \r\n}\r\n\r\nexport default ProgressBar;","import React from \"react\";\r\nimport classNames from \"../utils/class-names\";\r\n\r\nfunction Paused({timer, running}){\r\nconst paused = (!running && (parseInt(timer.time))>0);\r\nreturn (\r\n    <div className=\"row mb-2\">\r\n      <div className=\"col\">\r\n           <h2 className={classNames({\r\n        \"d-block\": paused,\r\n        \"d-none\": !paused,\r\n    })}>PAUSED</h2>\r\n      </div>\r\n    </div>\r\n);\r\n}\r\n\r\n\r\nexport default Paused;","import React from \"react\";\r\nimport classNames from \"../utils/class-names\";\r\n\r\nfunction MainButtons({timer,running, stop, playPause}){\r\nreturn (\r\n    <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div\r\n            className=\"btn-group btn-group-lg mb-2\"\r\n            role=\"group\"\r\n            aria-label=\"Timer controls\"\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              data-testid=\"play-pause\"\r\n              title=\"Start or pause timer\"\r\n              onClick={playPause}\r\n            >\r\n              <span\r\n                className={classNames({\r\n                  oi: true,\r\n                  \"oi-media-play\": !running,\r\n                  \"oi-media-pause\": running,\r\n                })}\r\n              />\r\n            </button>\r\n            <button\r\n              onClick={stop}\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              title=\"Stop the session\"\r\n            >\r\n              <span className={classNames({\r\n                  oi: true,\r\n                  \"oi-media-stop\": true,\r\n                  \"text-secondary\": timer.time === 0,\r\n                })} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n);\r\n}\r\n\r\nexport default MainButtons;","import React from \"react\";\r\nimport classNames from \"../utils/class-names\";\r\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\";\r\n\r\nfunction Display({timer,running,}) {\r\nreturn (\r\n    <>\r\n    <span\r\n                className={classNames({\r\n                  oi: true,\r\n                  \"oi-media-play\": running,\r\n                  \"oi-media-pause\": !running,\r\n                  \"d-none\": timer.time === 0,\r\n                })}\r\n              />\r\n        <div className={classNames({\r\n                \"row mb-2\": true,\r\n                \"d-none\": !running && timer.time === 0,\r\n                \"d-block\": running,\r\n              })}>\r\n          <div className=\"col\">\r\n            <h2 data-testid=\"session-title\">{timer.mode} for {minutesToDuration(timer.currentDuration)} minutes</h2>\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {secondsToDuration(timer.timeRemaining)} remaining\r\n            </p>\r\n          </div>\r\n        </div>\r\n    </>\r\n);\r\n}\r\n\r\nexport default Display;","import React, { useState } from \"react\";\r\nimport useInterval from \"../utils/useInterval\";\r\nimport {minutesToDuration, secondsToDuration} from \"../utils/duration\";\r\nimport FocusDuration from \"./FocusDuration\";\r\nimport BreakDuration from \"./BreakDuration\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport Paused from \"./Paused\";\r\nimport MainButtons from \"./MainButtons\";\r\nimport Display from \"./Display\";\r\n\r\nfunction Pomodoro() {\r\n  const initialState = {\r\n    time: 0,\r\n    focusDuration: 25,\r\n    breakDuration: 5,\r\n    mode: \"Focusing\",\r\n    timeRemaining: 1500,\r\n    currentDuration: 25\r\n  }\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  const [timer, setTimer] = useState(initialState);\r\n  \r\n  useInterval(\r\n    () => {\r\n      switch (timer.mode){\r\n        case \"Focusing\": \r\n          if (secondsToDuration(timer.time)===minutesToDuration(timer.focusDuration)) {\r\n            new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1111.mp3`).play();\r\n            setTimer({...timer, time: 0, mode: \"On Break\", timeRemaining: 0});\r\n        } else {\r\n          setTimer({...timer, time: timer.time + 1, timeRemaining: (timer.focusDuration*60-timer.time), currentDuration: timer.focusDuration});\r\n        };\r\n        break;\r\n        case \"On Break\":\r\n          if (secondsToDuration(timer.time)===minutesToDuration(timer.breakDuration)) {\r\n            new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1111.mp3`).play();\r\n            setTimer({...timer, time: 0, mode: \"Focusing\", timeRemaining: 0});\r\n        } else {\r\n          setTimer({...timer, time: timer.time + 1,timeRemaining: (timer.breakDuration*60-timer.time),currentDuration: timer.breakDuration});\r\n        };\r\n        break;\r\n        default:\r\n        setTimer({...timer, time: timer.time + 1});\r\n        break;     \r\n    }\r\n  },\r\n    isTimerRunning ? 1000 : null\r\n  );\r\n\r\n  function playPause() {\r\n    setIsTimerRunning((prevState) => !prevState);\r\n    if (timer.time===0) setTimer({...timer, time: 1})\r\n  }\r\n\r\n  function stop(){\r\n    setTimer(initialState);\r\n    setIsTimerRunning(false);\r\n\r\n  }\r\n\r\n  const focusDurationHandler = (event) => {\r\n    switch (event.target.className) {\r\n      case \"oi oi-plus\":\r\n      setTimer({...timer, focusDuration: Math.min(timer.focusDuration + 5, 60),currentDuration: timer.focusDuration});\r\n      break;\r\n      case \"btn btn-secondary increase\":\r\n      setTimer({...timer, focusDuration: Math.min(timer.focusDuration + 5, 60),currentDuration: timer.focusDuration});\r\n      break;\r\n      case \"oi oi-minus\":\r\n      setTimer({...timer, focusDuration: Math.max(timer.focusDuration - 5,5),currentDuration: timer.focusDuration});\r\n      break;\r\n      case \"btn btn-secondary decrease\":\r\n      setTimer({...timer, focusDuration: Math.max(timer.focusDuration - 5,5),currentDuration: timer.focusDuration});\r\n      break;\r\n      default:\r\n      break;    \r\n    }\r\n  }\r\n\r\n  const breakDurationHandler = (event) => {\r\n    switch (event.target.className) {\r\n      case \"oi oi-plus\":\r\n      setTimer({...timer, breakDuration: Math.min(timer.breakDuration + 1, 15)});\r\n      break;\r\n      case \"btn btn-secondary increase\":\r\n      setTimer({...timer, breakDuration: Math.min(timer.breakDuration + 1, 15)});\r\n      break;\r\n      case \"oi oi-minus\":\r\n      setTimer({...timer, breakDuration: Math.max(timer.breakDuration - 1,1)});\r\n      break;\r\n      case \"btn btn-secondary decrease\":\r\n      setTimer({...timer, breakDuration: Math.max(timer.breakDuration - 1,1)});\r\n      break;\r\n      default:\r\n      break;    \r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"pomodoro\">\r\n      <div className=\"row\">\r\n        <FocusDuration clickHandler={focusDurationHandler} timer={timer} running={isTimerRunning}/>\r\n        <BreakDuration clickHandler={breakDurationHandler} timer={timer} running={isTimerRunning}/>\r\n      </div>\r\n        <MainButtons timer={timer} running={isTimerRunning} stop={stop} playPause={playPause} />\r\n      <div>\r\n        <Display timer={timer} running={isTimerRunning} />\r\n        <Paused timer={timer} running={isTimerRunning}/>\r\n        <ProgressBar timer={timer} running={isTimerRunning}/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pomodoro;\r\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\n\r\nimport { useEffect, useRef } from \"react\";\r\n\r\nexport default function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Pomodoro from \"./pomodoro/Pomodoro\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header container\">\r\n        <h1>Pomodoro Timer</h1>\r\n      </header>\r\n      <div className=\"container\">\r\n        <Pomodoro />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}